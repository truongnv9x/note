<template>
  <div>
    <div class="page-bar">
      <div class="q-pa-md q-gutter-sm">
        <q-breadcrumbs>
          <q-breadcrumbs-el label="Trang chủ" icon="home" to="/trangchu" />
          <q-breadcrumbs-el label="Phê duyệt và theo dõi báo cáo" />
        </q-breadcrumbs>
      </div>
    </div>
    <!-- <div class="q-pa-md box-btn-add-deleteall" style="display:block">
      <div class="btn-item" style="text-align:right">
        <q-btn
          size="12px"
          color="green"
          label="Gửi báo cáo"
          icon="send"
          to="/guibaocao"
          style="text-decoration:none"
          title="Thêm mới bản ghi"
        />
      </div>
    </div>-->
    <!-- </div> -->

    <div class="q-pa-md">
      <!-- <div class="row">
        <label class="col-md-2 col-control-label">Từ khóa</label>
        <div class="col-md-4 col-12">
          <div class="box-item-search">
            <q-input
              v-model="modelNoRequest.strfilter"
              @blur="modelNoRequest.strfilter = modelNoRequest.strfilter.trim()"
              maxlength="250"
              dense
              outlined
              @keyup.enter="filterByCondition(0)"
            />
          </div>
        </div>

        <div class="col-md-3 col-12">
          <div class="box-search-submit form-group row">
            <q-btn
              size="12px"
              color="primary"
              label="Tìm kiếm"
              icon="search"
              style="text-decoration: none"
              title="Tìm kiếm"
              @click="filterByCondition(1)"
              @keyup.enter="filterByCondition()"
            />
            <q-btn
              size="12px"
              color="indigo"
              label="Nâng cao"
              style="text-decoration: none; margin-left: 5px"
              title="Nâng cao"
              @click="onSwitchAdvance(expanded)"
              v-model="expanded"
            />
          </div>
        </div>
      </div> -->

      <div class="row search-option-section align-items-center">
        <div v-if="!expanded" class="col-12">
          <div class="col-12">
            <div class="row">
              <label class="col-md-1 col-control-label">
                Tên công ty
                <span style="color: red">(*)</span>
              </label>
              <div class="col-md-7">
                <div class="box-item-search">
                  <q-select
                    :options-sanitize="true"
                    filter
                    use-input
                    v-model="modelNoRequest.tenCongTy"
                    dense
                    outlined
                    input-debounce="0"
                    :options="dDTenCongTyTemp"
                    @filter="filterDropdownCTCK"
                    lazy-rules
                    @input="
                      (newVal) => {
                        filterByCondition();
                      }
                    "
                  >
                    <template v-slot:no-option>
                      <q-item>
                        <q-item-section class="text-grey"
                          >Không có kết quả</q-item-section
                        >
                      </q-item>
                    </template>
                  </q-select>
                </div>
              </div>
              <label class="col-md-1 col-control-label"> Nhóm báo cáo </label>
              <div class="col-md-3">
                <div class="box-item-search">
                  <q-select
                    :options-sanitize="true"
                    filter
                    use-input
                    v-model="modelNoRequest.nhomBaoCao"
                    dense
                    outlined
                    input-debounce="0"
                    :options="optionNhomBaoCaosTemp"
                    @filter="filterFn"
                    lazy-rules
                    @input="
                      (newVal) => {
                        filterByCondition();
                      }
                    "
                  />
                </div>
              </div>
            </div>
          </div>
          <div class="row">
            <label class="col-md-1 col-control-label">Năm</label>
            <div class="col-md-3 col-12">
              <div class="box-item-search">
                <q-select
                  :options-sanitize="true"
                  filter
                  use-input
                  v-model="modelNoRequest.namThoiHan"
                  dense
                  outlined
                  input-debounce="0"
                  :options="dDNamThoiHan"
                  lazy-rules
                  @input="
                    (newVal) => {
                      filterByCondition();
                    }
                  "
                >
                  <!-- :rules="[(val) => val.value !== '' || 'Vui lòng chọn năm']" -->
                  <template v-slot:no-option>
                    <q-item>
                      <q-item-section class="text-grey"
                        >Không có kết quả</q-item-section
                      >
                    </q-item>
                  </template>
                </q-select>
              </div>
            </div>
            <label class="col-md-1 col-control-label">Kỳ báo cáo</label>
            <div class="col-md-3 col-12">
              <div class="box-item-search">
                <q-select
                  :options-sanitize="true"
                  filter
                  use-input
                  v-model="modelNoRequest.kyBaoCao"
                  dense
                  outlined
                  input-debounce="0"
                  :options="dDKyBaoCao"
                  lazy-rules
                  @input="
                    (newVal) => {
                      filterByCondition();
                    }
                  "
                >
                  <template v-slot:no-option>
                    <q-item>
                      <q-item-section class="text-grey"
                        >Không có kết quả</q-item-section
                      >
                    </q-item>
                  </template>
                </q-select>
              </div>
            </div>
            <label class="col-md-1 col-control-label">Trạng thái</label>
            <div class="col-md-3 col-12">
              <div class="box-item-search">
                <q-select
                  :options-sanitize="true"
                  filter
                  use-input
                  v-model="modelNoRequest.trangThai"
                  dense
                  outlined
                  input-debounce="0"
                  :options="dDTrangThaiTemp"
                  @filter="filterDropdownTT"
                  lazy-rules
                  @input="
                    (newVal) => {
                      filterByCondition();
                    }
                  "
                >
                  <template v-slot:no-option>
                    <q-item>
                      <q-item-section class="text-grey"
                        >Không có kết quả</q-item-section
                      >
                    </q-item>
                  </template>
                </q-select>
              </div>
            </div>
          </div>
          <div class="row">
            <label class="col-md-1 col-control-label">Loại báo cáo</label>
            <div class="col-md-3 col-12">
              <div class="box-item-search">
                <q-select
                  :options-sanitize="true"
                  filter
                  use-input
                  v-model="modelNoRequest.loaiBaoCao"
                  dense
                  outlined
                  input-debounce="0"
                  :options="dDLoaiBaoCao"
                  lazy-rules
                  @input="
                    (newVal) => {
                      filterByCondition();
                    }
                  "
                >
                  <template v-slot:no-option>
                    <q-item>
                      <q-item-section class="text-grey"
                        >Không có kết quả</q-item-section
                      >
                    </q-item>
                  </template>
                </q-select>
              </div>
            </div>
            <!-- <label class="col-md-1 col-control-label">Tên báo cáo</label>
            <div class="col-md-3 col-12">
              <div class="box-item-search">
                <q-input
                  v-model="modelNoRequest.tenBaoCao"
                  @blur="
                    modelNoRequest.tenBaoCao = modelNoRequest.tenBaoCao.trim()
                  "
                  maxlength="250"
                  dense
                  outlined
                  @keyup.enter="filterByCondition()"
                />
              </div>
            </div> -->
            <label class="col-md-1 col-control-label">Tên báo cáo</label>
            <div class="col-md-3 col-12">
              <div class="box-item-search">
                <q-select
                  :options-sanitize="true"
                  filter
                  use-input
                  v-model="modelNoRequest.tenBaoCao"
                  @filter="filterDropdownTenBaoCao"
                  dense
                  outlined
                  input-debounce="0"
                  :options="arrTenBaoCaoTemp"
                  lazy-rules
                  @input="
                    (newVal) => {
                      filterByCondition();
                    }
                  "
                >
                  <template v-slot:no-option>
                    <q-item>
                      <q-item-section class="text-grey"
                        >Không có kết quả</q-item-section
                      >
                    </q-item>
                  </template>
                </q-select>
              </div>
            </div>
            <div class="col-md-3 col-12">
              <div class="box-search-submit form-group col-control-label pb-0">
                <q-btn
                  size="12px"
                  color="primary"
                  label="Tìm kiếm"
                  icon="search"
                  style="text-decoration: none"
                  title="Tìm kiếm"
                  @click="filterByCondition()"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="q-pa-md">
      <div
        class="q-table__container q-table--cell-separator q-table__card q-table--no-wrap"
      >
        <div class="q-table__middle scroll">
          <table class="q-table">
            <thead>
              <tr class style="text-align: left">
                <th width="5%">STT</th>
                <th width="35%">Tên báo cáo</th>
                <th width="10%">Giá trị kỳ báo cáo</th>
                <th width="10%">Thời hạn gửi</th>
                <th width="5%">Trạng thái</th>
                <th width="10%">Thời gian gia hạn</th>
                <th width="10%">Thời gian gửi</th>
                <th width="15%">Tác vụ</th>
              </tr>
            </thead>
            <template v-if="listData != null && listData.length > 0">
              <tbody
                v-for="(lstCongTy, index) in listData"
                :key="index"
                data-th="Name"
                style="cursor: pointer"
                class="table-border"
              >
                <tr
                  v-if="lstCongTy != null"
                  @click="toggle(index)"
                  v-show="true"
                >
                  <td colspan="8">
                    <q-icon
                      style="margin-bottom: 3px; display: inline-block"
                      color="secondary"
                      :name="iconName(lstCongTy.active)"
                      class="itemRoot-tree"
                    ></q-icon>
                    <p
                      class="itemRoot-tree"
                      style="
                        margin-bottom: 3px;
                        padding: 10px;
                        display: inline-block;
                        font-weight: bold;
                      "
                    >
                      &nbsp;&nbsp;{{ lstCongTy.tenCongTy }}
                    </p>
                  </td>
                </tr>
                <template
                  v-if="
                    lstCongTy.lstnamThoiHanDTO != null &&
                    lstCongTy.lstnamThoiHanDTO.length > 0
                  "
                >
                  <template
                    v-for="(
                      lstnamThoiHan, indexNam
                    ) in lstCongTy.lstnamThoiHanDTO"
                  >
                    <tr
                      v-bind:key="
                        lstCongTy.tenCongTy +
                        ' ' +
                        lstnamThoiHan.namThoiHan +
                        ' ' +
                        indexNam
                      "
                      style="cursor: pointer"
                    >
                      <td
                        v-if="lstnamThoiHan != null"
                        @click="toggleSub(index, indexNam)"
                        v-show="!lstCongTy.active ? false : true"
                        colspan="8"
                        style="margin-left: 10px"
                      >
                        <span style="margin-right: 10px"></span>
                        <q-icon
                          style="margin-bottom: 3px; display: inline-block"
                          color="secondary"
                          :name="iconName(lstnamThoiHan.active)"
                          class="itemRoot-tree"
                        ></q-icon>
                        <p
                          class="itemRoot-tree"
                          style="
                            margin-bottom: 3px;
                            padding: 10px;
                            display: inline-block;
                            font-weight: bold;
                          "
                        >
                          &nbsp;&nbsp;Năm {{ lstnamThoiHan.namThoiHan }}
                        </p>
                      </td>
                    </tr>

                    <template
                      v-if="
                        lstnamThoiHan.lstkyBaoCao != null &&
                        lstnamThoiHan.lstkyBaoCao.length > 0
                      "
                    >
                      <template
                        v-for="lstkyBaoCao in lstnamThoiHan.lstkyBaoCao"
                      >
                        <tr
                          v-bind:key="lstkyBaoCao.namThoiHan"
                          style="cursor: pointer"
                        >
                          <td
                            v-if="lstkyBaoCao != null"
                            @click="toggleSub1(index, indexNam, indexKyBC)"
                            colspan="8"
                            style="margin-left: 10px"
                          >
                            <span style="margin-right: 20px"></span>
                            <q-icon
                              style="margin-bottom: 3px; display: inline-block"
                              color="secondary"
                              :name="iconName(lstkyBaoCao.active)"
                              class="itemRoot-tree"
                            ></q-icon>
                            <p
                              class="itemRoot-tree"
                              v-if="lstkyBaoCao.kyBaoCao == 'N'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Ngày
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'TU'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Tuần
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'TH'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Tháng
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'Q'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Quý
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'BN'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Bán niên
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'NAM'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Năm
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'BT'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Bất thường
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'TYC'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Theo yêu cầu
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else-if="lstkyBaoCao.kyBaoCao == 'K'"
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;Khác
                            </p>
                            <p
                              class="itemRoot-tree"
                              v-else
                              style="
                                margin-bottom: 3px;
                                padding: 10px;
                                display: inline-block;
                                font-weight: bold;
                              "
                            >
                              &nbsp;&nbsp;{{ lstkyBaoCao.kyBaoCao }}
                            </p>
                          </td>
                        </tr>

                        <template
                          v-if="
                            lstkyBaoCao.lstchillDTO != null &&
                            lstkyBaoCao.lstchillDTO.length > 0
                          "
                        >
                          <tr
                            v-for="(
                              itemChill, indexChill
                            ) in lstkyBaoCao.lstchillDTO"
                            :key="itemChill.id"
                            data-th="Name"
                            style="cursor: pointer"
                            v-show="
                              !lstCongTy.active ? false : lstkyBaoCao.active
                            "
                          >
                            <td class="q-table_stt">
                              {{ indexChill + 1 }}
                            </td>
                            <td data-th="Description">
                              <router-link
                                title="Xem chi tiết"
                                :to="{
                                  name: 'DuLieuBaoCaoDetailView',
                                  params: {
                                    thanhvienid: itemChill.id,
                                    baocaoid:
                                      itemChill.idBaoCao == null
                                        ? 0
                                        : itemChill.idBaoCao,
                                    isctck: 0,
                                  },
                                }"
                                >{{ itemChill.tenBaoCao }}</router-link
                              >
                            </td>
                            <td
                              data-th="Description"
                              style="text-align: center"
                            >
                              <router-link
                                title="Xem chi tiết"
                                :to="{
                                  name: 'DuLieuBaoCaoDetailView',
                                  params: {
                                    thanhvienid: itemChill.id,
                                    baocaoid:
                                      itemChill.idBaoCao == null
                                        ? 0
                                        : itemChill.idBaoCao,
                                    isctck: 0,
                                  },
                                }"
                                >{{ itemChill.giaTriKyBC }}</router-link
                              >
                            </td>
                            <td
                              data-th="Description"
                              style="text-align: center"
                            >
                              <router-link
                                title="Xem chi tiết"
                                :to="{
                                  name: 'DuLieuBaoCaoDetailView',
                                  params: {
                                    thanhvienid: itemChill.id,
                                    baocaoid:
                                      itemChill.idBaoCao == null
                                        ? 0
                                        : itemChill.idBaoCao,
                                    isctck: 0,
                                  },
                                }"
                                >{{ itemChill.thoiHanGui }}</router-link
                              >
                            </td>
                            <td data-th="Description">
                              <router-link
                                title="Xem chi tiết"
                                :to="{
                                  name: 'DuLieuBaoCaoDetailView',
                                  params: {
                                    thanhvienid: itemChill.id,
                                    baocaoid:
                                      itemChill.idBaoCao == null
                                        ? 0
                                        : itemChill.idBaoCao,
                                    isctck: 0,
                                  },
                                }"
                              >
                                <div
                                  v-if="itemChill.trangThai == 'Đã gửi'"
                                  class="text-primary text-center text-bold"
                                >
                                  {{ itemChill.trangThai }}
                                </div>
                                <div
                                  v-else-if="itemChill.trangThai == 'Chưa gửi'"
                                  class="text-warning text-center text-bold"
                                >
                                  {{ itemChill.trangThai }}
                                </div>
                                <div
                                  v-else-if="itemChill.trangThai == 'Bị hủy'"
                                  class="text-danger text-center text-bold"
                                >
                                  {{ itemChill.trangThai }}
                                </div>
                                <div v-else class="text-center">
                                  {{ itemChill.trangThai }}
                                </div>
                              </router-link>
                            </td>
                            <td
                              data-th="Description"
                              style="text-align: center"
                            >
                              <router-link
                                title="Xem chi tiết"
                                :to="{
                                  name: 'DuLieuBaoCaoDetailView',
                                  params: {
                                    thanhvienid: itemChill.id,
                                    baocaoid:
                                      itemChill.idBaoCao == null
                                        ? 0
                                        : itemChill.idBaoCao,
                                    isctck: 0,
                                  },
                                }"
                                >{{ itemChill.thoiHanGiaHan }}</router-link
                              >
                            </td>
                            <td
                              data-th="Description"
                              style="text-align: center"
                            >
                              <router-link
                                title="Xem chi tiết"
                                :to="{
                                  name: 'DuLieuBaoCaoDetailView',
                                  params: {
                                    thanhvienid: itemChill.id,
                                    baocaoid:
                                      itemChill.idBaoCao == null
                                        ? 0
                                        : itemChill.idBaoCao,
                                    isctck: 0,
                                  },
                                }"
                                >{{ itemChill.ngayGui }}</router-link
                              >
                            </td>

                            <td data-th="Actions" align="center">
                              <a
                                title="Gia hạn"
                                @click="
                                  (newVal) => {
                                    thoiGianGH = '';
                                    itemClicked = itemChill.id;
                                    formGiaHan = true;
                                  }
                                "
                                style="text-decoration: none"
                                v-if="itemChill.trangThaiId == 1"
                              >
                                <q-btn
                                  round
                                  color="teal"
                                  icon="update"
                                  size="7px"
                                ></q-btn>
                              </a>
                              <a
                                title="Yêu cầu gửi lại"
                                @click="
                                  (newVal) => {
                                    lyDoYeuCauGuiLai = '';
                                    itemClicked = itemChill.id;
                                    formYeuCauGuiLai = true;
                                  }
                                "
                                style="text-decoration: none"
                                v-if="
                                  (itemChill.trangThaiId == 2 ||
                                    itemChill.trangThaiId == 3) &&
                                  itemChill.huyBaoCao != 2
                                "
                              >
                                <q-btn
                                  round
                                  color="amber"
                                  icon="refresh"
                                  size="7px"
                                ></q-btn>
                              </a>
                              <a
                                title="Chấp nhận hủy"
                                @click="chapNhanHuy(itemChill)"
                                style="text-decoration: none"
                                v-if="itemChill.huyBaoCao == 2"
                              >
                                <q-btn
                                  round
                                  color="primary"
                                  icon="done_outline"
                                  size="7px"
                                ></q-btn>
                              </a>
                              <a
                                title="Từ chối hủy"
                                @click="tuChoiHuy(itemChill)"
                                style="text-decoration: none"
                                v-if="itemChill.huyBaoCao == 2"
                              >
                                <q-btn
                                  round
                                  color="red"
                                  icon="clear"
                                  size="7px"
                                ></q-btn>
                              </a>
                              <a
                                v-if="
                                  itemChill.khoaBaoCao == 0 ||
                                  itemChill.khoaBaoCao == null
                                "
                                title="Khóa báo cáo"
                                @click="
                                  (newVal) => {
                                    lyDoYeuCauGuiLai = '';
                                    itemClicked = itemChill.id;
                                    formKhoaBaoCao = true;
                                  }
                                "
                                style="text-decoration: none"
                              >
                                <q-btn
                                  round
                                  color="warning"
                                  icon="lock"
                                  size="7px"
                                ></q-btn>
                              </a>
                              <a
                                title="Mở khóa báo cáo"
                                @click="
                                  (newVal) => {
                                    lyDoYeuCauGuiLai = '';
                                    itemClicked = itemChill.id;
                                    formMoKhoaBaoCao = true;
                                  }
                                "
                                style="text-decoration: none"
                                v-if="itemChill.khoaBaoCao == 1"
                              >
                                <q-btn
                                  round
                                  color="primary"
                                  icon="lock"
                                  size="7px"
                                ></q-btn>
                              </a>
                              <router-link
                                title="Xem chi tiết"
                                :to="{
                                  name: 'lichSuGuiBaoCaoView',
                                  params: {
                                    id: itemChill.id,
                                    viewReturn: 'baocaodinhki',
                                  },
                                }"
                              >
                                <a
                                  title="Lịch sử"
                                  style="text-decoration: none"
                                >
                                  <q-btn
                                    round
                                    color="green"
                                    icon="history"
                                    size="7px"
                                  ></q-btn>
                                </a>
                              </router-link>
                            </td>
                          </tr>
                        </template>
                      </template>
                    </template>
                  </template>
                </template>
              </tbody>
            </template>
            <template v-else>
              <tbody>
                <tr>
                  <td colspan="9">
                    <p>
                      <i
                        aria-hidden="true"
                        class="material-icons q-icon q-table__bottom-nodata-icon"
                        >warning</i
                      >
                      Không có bản ghi nào được tìm thấy
                    </p>
                  </td>
                </tr>
              </tbody>
            </template>
          </table>
        </div>
        <!-- phân trang -->
        <template>
          <div
            slot="pagination"
            class="row flex-center q-py-sm pagiation-custumes q-table__bottom"
            style="justify-content: flex-end !important"
          >
            <div class="q-table__control">
              <span style="display: contents">
                Hiển thị
                <q-select
                  :options-sanitize="true"
                  v-model="pagination.rowsPerPage"
                  :options="rowsOptions"
                  @input="
                    (newVal) => {
                      pagination.rowsPerPage = newVal;
                      requestPerPage();
                    }
                  "
                  style="margin-left: 10px"
                />
              </span>
              &nbsp;
              <span class="q-table__bottom-item"
                >Trên tổng số {{ this.pagination.total }} bản ghi</span
              >
            </div>
            <q-btn
              round
              dense
              size="sm"
              outline
              style="color: primary"
              class="q-mr-sm"
              :disable="this.isFirstPage"
              @click="prevPage()"
            >
              <i class="material-icons" style="font-size: 20px"
                >keyboard_arrow_left</i
              >
            </q-btn>

            <div class="q-mr-sm d-flex fix-q-field" style="font-size: small">
              <span>Trang </span>
              <q-input
                type="number"
                style="padding: 0 5px; width: 69px"
                ref="pagingation"
                v-model="pagination.page"
                maxlength="5"
                @blur="changeIndex(pagination.page, pagination.pagesNumber)"
                :rules="[(val) => val <= this.pagination.pagesNumber || '']"
              />
              <span>/ {{ this.pagination.pagesNumber }}</span>
            </div>
            <q-btn
              round
              dense
              size="sm"
              outline
              style="color: primary"
              :disable="this.isLastPage"
              @click="nextPage()"
            >
              <i class="material-icons" style="font-size: 20px"
                >keyboard_arrow_right</i
              >
            </q-btn>
          </div>
        </template>
      </div>
    </div>

    <q-dialog v-model="formGiaHan" persistent>
      <q-card style="width: 700px; max-width: 80vw; padding-bottom: 10px">
        <q-card-section>
          <div class="text-h6">Gia hạn gửi báo cáo</div>
        </q-card-section>

        <q-card-section>
          <div class="row form-group">
            <label class="col-md-4 col-control-label">
              Lý do gia hạn
              <span style="color: red">(*)</span>
            </label>
            <div class="col-md-5">
              <q-input
                dense
                ref="lyDoGH"
                @blur="lyDoGH = lyDoGH.trim()"
                autogrow
                outlined
                lazy-rules
                v-model="lyDoGH"
                maxlength="1000"
                :rules="[
                  (val) =>
                    (val && val.length > 0) ||
                    'Lý do gia hạn gửi báo cáo không được để trống',
                ]"
              />
            </div>
            <label class="col-md-4 col-control-label">
              Số ngày gia hạn
              <span style="color: red">(*)</span>
            </label>
            <div class="col-md-5">
              <q-input
                dense
                outlined
                lazy-rules
                type="number"
                v-model="thoiGianGH"
                @blur="thoiGianGH = thoiGianGH.trim()"
                :rules="[
                  (val) =>
                    (val && val.length > 0) ||
                    'Thời gian gia hạn gửi báo cáo không được để trống',
                ]"
              />
            </div>
            <div class="col-md-1 col-control-label">(ngày)</div>
          </div>
        </q-card-section>

        <q-card-actions align="right" class="bg-white db">
          <q-btn
            size="12px"
            color="info"
            label="Gia hạn"
            @click="giaHan()"
            style="text-decoration: none; margin-right: 5px"
            title
          />
          <q-btn
            size="12px"
            label="Hủy bỏ"
            title="Hủy bỏ"
            style="text-decoration: none; margin-right: 5px"
            v-close-popup
          />
        </q-card-actions>
      </q-card>
    </q-dialog>
    <q-dialog v-model="formYeuCauGuiLai" persistent>
      <q-card style="width: 700px; max-width: 80vw; padding-bottom: 10px">
        <q-card-section>
          <div class="text-h6">Yêu cầu gửi lại báo cáo</div>
        </q-card-section>

        <q-card-section>
          <div class="row form-group">
            <label class="col-md-3 col-control-label">
              Lý do
              <span style="color: red">(*)</span>
            </label>
            <div class="col-md-9">
              <q-input
                dense
                outlined
                lazy-rules
                type="textarea"
                rows="3"
                v-model="lyDoYeuCauGuiLai"
                @blur="lyDoYeuCauGuiLai = lyDoYeuCauGuiLai.trim()"
                :rules="[
                  (val) =>
                    (val && val.length > 0) ||
                    'Lý do yêu cầu gửi lại báo cáo không được để trống',
                ]"
              />
            </div>
          </div>
        </q-card-section>

        <q-card-actions align="right" class="bg-white db">
          <q-btn
            size="12px"
            color="warning"
            label="Yêu cầu gửi lại"
            @click="yeuCauGuiLai()"
            style="text-decoration: none; margin-right: 5px"
            title
          />
          <q-btn
            size="12px"
            label="Hủy bỏ"
            title="Hủy bỏ"
            style="text-decoration: none; margin-right: 5px"
            v-close-popup
          />
        </q-card-actions>
      </q-card>
    </q-dialog>

    <q-dialog v-model="formKhoaBaoCao" persistent>
      <q-card style="width: 700px; max-width: 80vw; padding-bottom: 10px">
        <q-card-section>
          <div class="text-h6">Khóa báo cáo</div>
        </q-card-section>

        <q-card-section>
          <div class="row form-group">
            <label class="col-md-3 col-control-label">
              Lý do
              <span style="color: red">(*)</span>
            </label>
            <div class="col-md-9">
              <q-input
                dense
                outlined
                lazy-rules
                type="textarea"
                rows="3"
                v-model="lyDoYeuCauGuiLai"
                @blur="lyDoYeuCauGuiLai = lyDoYeuCauGuiLai.trim()"
                :rules="[
                  (val) =>
                    (val && val.length > 0) ||
                    'Lý do khóa báo cáo không được để trống',
                ]"
              />
            </div>
          </div>
        </q-card-section>

        <q-card-actions align="right" class="bg-white db">
          <q-btn
            size="12px"
            color="warning"
            label="Khóa báo cáo"
            @click="khoaBaoCao()"
            style="text-decoration: none; margin-right: 5px"
            title
          />
          <q-btn
            size="12px"
            label="Hủy bỏ"
            title="Hủy bỏ"
            style="text-decoration: none; margin-right: 5px"
            v-close-popup
          />
        </q-card-actions>
      </q-card>
    </q-dialog>

    <q-dialog v-model="formMoKhoaBaoCao" persistent>
      <q-card style="width: 700px; max-width: 80vw; padding-bottom: 10px">
        <q-card-section>
          <div class="text-h6">Mở khóa báo cáo</div>
        </q-card-section>

        <q-card-section>
          <div class="row form-group">
            <label class="col-md-3 col-control-label">
              Lý do
              <span style="color: red">(*)</span>
            </label>
            <div class="col-md-9">
              <q-input
                dense
                outlined
                lazy-rules
                type="textarea"
                rows="3"
                v-model="lyDoYeuCauGuiLai"
                @blur="lyDoYeuCauGuiLai = lyDoYeuCauGuiLai.trim()"
                :rules="[
                  (val) =>
                    (val && val.length > 0) ||
                    'Lý do mở khóa báo cáo không được để trống',
                ]"
              />
            </div>
          </div>
        </q-card-section>

        <q-card-actions align="right" class="bg-white db">
          <q-btn
            size="12px"
            color="warning"
            label="Mở khóa báo cáo"
            @click="moKhoaBaoCao()"
            style="text-decoration: none; margin-right: 5px"
            title
          />
          <q-btn
            size="12px"
            label="Hủy bỏ"
            title="Hủy bỏ"
            style="text-decoration: none; margin-right: 5px"
            v-close-popup
          />
        </q-card-actions>
      </q-card>
    </q-dialog>
  </div>
</template>
<script>
import baseCommon from "../../baseCommon";
import apiService from "../../services/apiService";

const optionNhomBaoCao = [
  {
    label: "-- Tất cả --",
    value: "",
  },
  {
    label: "Báo cáo hoạt động",
    value: "HD",
  },
  {
    label: "Báo cáo tài chính",
    value: "TCR",
  },
  {
    label: "Báo cáo kiểm soát - kiểm soát đặc biệt",
    value: "KSKSDB",
  },

  {
    label: "Báo cáo tỷ lệ an toàn tài chính",
    value: "TLATTC",
  },
  {
    label: "Báo cáo hợp nhất",
    value: "HN",
  },

  {
    label: "Đăng ký giao dịch trực tuyến",
    value: "DKGDTT",
  },
  {
    label: "Khác",
    value: "K",
  },
];

export default {
  name: "baocaodinhki",
  mixins: [baseCommon, apiService],
  components: {},
  data() {
    return {
      rowsOptions: [15, 20, 30, 50, 100, 500, 1000],
      indexData: 0,
      currentPage: 0,
      selectedRowID: {},
      IdStoreArr: [],
      currentPageSize: 0,
      formGiaHan: false,
      thoiGianGH: "",
      lyDoGH: "",
      formYeuCauGuiLai: false,
      formKhoaBaoCao: false,
      formMoKhoaBaoCao: false,
      lyDoYeuCauGuiLai: "",
      loading: false,
      IndexArr: [],
      igoneIndex: [],
      actionNext: true,
      isFirstPage: false,
      isLastPage: false,
      selected: [],
      optionNhomBaoCao: optionNhomBaoCao,
      optionNhomBaoCaosTemp: [],
      dDKyBaoCao: [
        {
          label: "-- Tất cả --",
          value: "",
        },
        {
          label: "Ngày",
          value: "N",
        },
        {
          label: "Tuần",
          value: "TU",
        },
        {
          label: "Tháng",
          value: "TH",
        },
        {
          label: "Quý",
          value: "Q",
        },
        {
          label: "Bán niên",
          value: "BN",
        },
        {
          label: "Năm",
          value: "NAM",
        },
      ],
      dDTrangThai: [
        {
          label: "-- Tất cả --",
          value: "",
        },
        {
          label: "Chưa gửi",
          value: "1",
        },
        {
          label: "Đã gửi",
          value: "2",
        },
        {
          label: "Gửi muộn",
          value: "3",
        },
        {
          label: "Bị hủy",
          value: "4",
        },
        {
          label: "Yêu cầu gửi lại",
          value: "5",
        },
        {
          label: "Yêu cầu hủy",
          value: "6",
        },
      ],
      dDLoaiBaoCao: [
        {
          label: "-- Tất cả --",
          value: "",
        },
        {
          label: "Báo cáo định kỳ",
          value: "DK",
        },
        {
          label: "Báo cáo bất thường",
          value: "BT",
        },
        {
          label: "Báo cáo theo yêu cầu",
          value: "TYC",
        },
        {
          label: "Báo cáo khác",
          value: "K",
        },
      ],

      dDTrangThaiTemp: [],
      dDTenCongTy: [],
      dDTenCongTyTemp: [],
      dDNamThoiHan: [],
      arrTenBaoCao: [
        {
          label: "-- Tất cả --",
          value: "",
        },
      ],
      arrTenBaoCaoTemp: [],
      modelNoRequest: {
        strfilter: "",
        namThoiHan: {
          label: "-- Tất cả --",
          value: "",
        },
        nhomBaoCao: {
          label: "--Tất cả--",
          value: "",
        },
        tenBaoCao: {
          label: "-- Tất cả --",
          value: "",
        },
        tenCongTy: {
          label: "-- Tất cả --",
          value: "",
        },
        trangThai: {
          label: "-- Tất cả --",
          value: "",
        },
        kyBaoCao: {
          label: "-- Tất cả --",
          value: "",
        },
        strFilter: "",
        loaiBaoCao: {
          label: "--Tất cả --",
          value: "",
        },
      },
      expanded: false,
      pagination: {
        sortBy: "id",
        descending: true,
        page: 0,
        rowsPerPage: 30,
        rowsNumber: 10,
        pagesNumber: 10,
        total: 0,
      },
      modelSearch: [],
      separator: "cell",

      listData: [],
      toggled: true,
    };
  },
  mounted() {
    var self = this;
    self.onRequest({
      filter: self.modelNoRequest,
      pagination: self.pagination,
    });
    //get Dropdown Công ty
    // apiService.get(
    //   process.env.VUE_APP_ROOT_API + "baocaodinhky/getlisttencongty",
    //   null,
    //   function (res) {
    //     self.dDTenCongTy = [];
    //     if (res != null && res.length > 0) {
    //       var item = {
    //         label: "-- Tất cả --",
    //         value: "",
    //       };

    //       self.dDTenCongTy.push(item);
    //       for (let index = 0; index < res.length; index++) {
    //         item = {
    //           label: res[index].label,
    //           value: res[index].value,
    //         };

    //         self.dDTenCongTy.push(item);
    //       }
    //     }
    //   },
    //   function () {
    //     //disable loading
    //     self.hideLoading();
    //   }
    // );
  },
  created() {
    var self = this;
    self.getDropDownCongTy();
    self.getDropDownNamThoiHan();
    self.getDropDownBieuMauBaoCao();
    //get Dropdown Công ty

    // page = page || self.pagination.page;
  },
  methods: {
    filterFn(val, update) {
      var self = this;
      if (val === "") {
        update(() => {
          self.optionNhomBaoCaosTemp = self.optionNhomBaoCao;
        });
        return;
      }

      update(() => {
        const needle = val.toLowerCase();
        self.optionNhomBaoCaosTemp = self.optionNhomBaoCao.filter(
          (v) => v.label.toLowerCase().indexOf(needle) > -1
        );
      });
    },
    getDropDownBieuMauBaoCao() {
      var self = this;
      var params = {
        pageNo: 0,
        pageSize: 9999,
        desc: "",
        tenBaoCao: "",
        canCuPhapLy: "",
        strFilter: "",
      };
      self.showLoading();
      apiService.get(
        process.env.VUE_APP_ROOT_API + "bieumaubaocao/getall",
        params,
        function (res) {
          self.hideLoading();
          self.listData = [];
          for (var item in res.lstBDTO) {
            for (let i = 0; i < res.lstBDTO[item].length; i++) {
              var itemNganhNgheKd = {
                label: "-- Chọn --",
                value: "",
              };
              itemNganhNgheKd = {
                label: res.lstBDTO[item][i].tenBaoCao,
                value: res.lstBDTO[item][i].id,
              };
              self.arrTenBaoCao.push(itemNganhNgheKd);
            }
          }
          self.hideLoading();
        },
        function () {
          //disable loading
          self.hideLoading();
        }
      );
    },
    getDropDownNamThoiHan() {
      var self = this;
      apiService.get(
        process.env.VUE_APP_ROOT_API + "baocaodinhky/namthoihan",
        null,
        function (res) {
          self.hideLoading();
          self.dDNamThoiHan = [];
          if (res != null && res.length > 0) {
            var item = {
              label: "-- Tất cả --",
              value: null,
            };

            self.dDNamThoiHan.push(item);
            for (let index = 0; index < res.length; index++) {
              item = {
                label: res[index].label,
                value: res[index].value,
              };

              self.dDNamThoiHan.push(item);
            }
          }
        },
        function () {
          //disable loading
          self.hideLoading();
        }
      );
    },
    getDropDownCongTy() {
      var self = this;
      //Load loại công ty
      var requestLCT = {
        keySort: "",
        desc: false,
        checkUserLogin: true,
      };
      self.showLoading();
      apiService.get(
        process.env.VUE_APP_ROOT_API + "ctckthongtin/getall",
        requestLCT,
        function (res) {
          self.hideLoading();
          var itemCT = {
            label: "-- Tất cả --",
            value: "",
          };

          self.dDTenCongTy = res.lstCtckThongTin;
          self.dDTenCongTy.unshift(itemCT);
        },
        function () {}
      );
    },
    changeIndex(newVal, totalPage) {
      var self = this;
      var paging = self.pagination;
      paging.page = newVal;
      if (newVal >= 1 && newVal <= totalPage) {
        self.onRequest({
          pagination: paging,
        });
      } else {
        self.displayError("Quá số trang tối đa");
      }
    },
    setPadding(item) {
      return `padding-left: ${item.level * 30}px;`;
    },
    selectedRow(item) {
      this.selectedRowID = item.ctckThongTinId;
    },

    checkIndex(self, flag) {
      let lenght = self.filter((v) => v.id == flag).length;
      return lenght;
    },

    onRequest(props) {
      let { page, rowsPerPage, sortBy, descending } = props.pagination;
      this.currentPage = page <= 0 ? 1 : page;
      this.currentPageSize = rowsPerPage;
      this.indexData = 0;
      this.pagination.sortBy = sortBy;
      this.pagination.descending = descending;

      this.getListData(page, rowsPerPage, null);
    },

    prevPage() {
      let rowsPerPage = this.pagination.rowsPerPage;
      let page = this.pagination.page - 1;
      this.getListData(page, rowsPerPage, false);
    },
    nextPage() {
      let rowsPerPage = this.pagination.rowsPerPage;
      let page = this.pagination.page + 1;
      this.getListData(page, rowsPerPage, true);
    },
    requestPerPage() {
      let rowsPerPage = this.pagination.rowsPerPage;
      let page = 0;
      this.getListData(page, rowsPerPage, null);
    },

    khoaBaoCao() {
      var self = this;
      if (self.lyDoYeuCauGuiLai == "" || self.lyDoYeuCauGuiLai.trim() == "") {
        self.displayError("Bạn chưa nhập lý do khóa báo cáo!");
      } else {
        self.showLoading();
        apiService.put(
          process.env.VUE_APP_ROOT_API + "bieumaubaocao/khoabaocao",
          JSON.stringify({
            id: self.decodeString(self.itemClicked, "baocaodinhkyctck"),
            lyDoGuiLai: this.lyDoYeuCauGuiLai,
          }),
          function (res) {
            self.lyDoYeuCauGuiLai = "";
            if (res != null) {
              self.hideLoading();
              //fetch data
              self.pagination.page = 0;
              self.pagination.rowsPerPage = 10;
              self.onRequest({
                pagination: self.pagination,
              });
              var strMessage = "Khóa báo cáo thành công.";
              self.formKhoaBaoCao = false;
              self.displaySuccess(strMessage);
            } else {
              self.displayError(res.message);
            }
          },
          function () {
            self.displayError("Khóa báo cáo không thành công");
          }
        );
      }
    },

    filterDropdownCTCK(val, updateLH) {
      var self = this;

      if (val === "") {
        updateLH(() => {
          self.dDTenCongTyTemp = self.dDTenCongTy;
        });
        return;
      }

      updateLH(() => {
        const needle = val.toLowerCase();
        self.dDTenCongTyTemp = self.dDTenCongTy.filter(
          (v) => v.label.toLowerCase().indexOf(needle) > -1
        );
      });
    },

    filterDropdownTenBaoCao(val, updateLH) {
      var self = this;

      if (val === "") {
        updateLH(() => {
          self.arrTenBaoCaoTemp = self.arrTenBaoCao;
        });
        return;
      }

      updateLH(() => {
        const needle = val.toLowerCase();
        self.arrTenBaoCaoTemp = self.arrTenBaoCao.filter(
          (v) => v.label.toLowerCase().indexOf(needle) > -1
        );
      });
    },

    filterDropdownTT(val, updateLH) {
      var self = this;

      if (val === "") {
        updateLH(() => {
          self.dDTrangThaiTemp = self.dDTrangThai;
        });
        return;
      }

      updateLH(() => {
        const needle = val.toLowerCase();
        self.dDTrangThaiTemp = self.dDTrangThai.filter(
          (v) => v.label.toLowerCase().indexOf(needle) > -1
        );
      });
    },

    moKhoaBaoCao() {
      var self = this;
      if (self.lyDoYeuCauGuiLai == "" || self.lyDoYeuCauGuiLai.trim() == "") {
        self.displayError("Bạn chưa nhập lý do mở khóa báo cáo!");
      } else {
        self.showLoading();
        apiService.put(
          process.env.VUE_APP_ROOT_API + "bieumaubaocao/mokhoabaocao",
          JSON.stringify({
            id: self.decodeString(self.itemClicked, "baocaodinhkyctck"),
            lyDoGuiLai: this.lyDoYeuCauGuiLai,
          }),
          // { id: self.itemClicked, thoiHanGiaHan: this.thoiGianGH },
          function (res) {
            self.lyDoYeuCauGuiLai = "";
            if (res != null) {
              self.hideLoading();
              //fetch data
              self.pagination.page = 0;
              self.pagination.rowsPerPage = 15;
              self.onRequest({
                pagination: self.pagination,
              });
              var strMessage = "Mở khóa báo cáo thành công.";
              self.formMoKhoaBaoCao = false;
              self.displaySuccess(strMessage);
            } else {
              self.displayError(res.message);
            }
          },
          function () {
            self.displayError("Mở khóa báo cáo không thành công");
          }
        );
      }
    },
    giaHan() {
      var self = this;
      if (self.thoiGianGH == "" || self.thoiGianGH.trim() == "") {
        self.displayError("Bạn chưa nhập thời gian!");
      } else {
        self.showLoading();
        apiService.put(
          process.env.VUE_APP_ROOT_API + "bieumaubaocao/giahan",
          JSON.stringify({
            id: self.decodeString(self.itemClicked, "baocaodinhkyctck"),
            phienBan: this.thoiGianGH,
            lyDoGiaHan: this.lyDoGH,
          }),
          // { id: self.itemClicked, thoiHanGiaHan: this.thoiGianGH },
          function (res) {
            self.thoiGianGiaHan = "";
            if (res != null) {
              self.hideLoading();
              //fetch data
              self.pagination.page = 0;
              self.pagination.rowsPerPage = 15;
              self.onRequest({
                pagination: self.pagination,
              });
              var strMessage = "Gia hạn gửi báo cáo thành công.";
              self.formGiaHan = false;
              self.lyDoGH = "";
              self.displaySuccess(strMessage);
            } else {
              self.displayError(res.message);
            }
          },
          function () {
            self.displayError("Gia hạn gửi báo cáo không thành công");
          }
        );
      }
    },
    yeuCauGuiLai() {
      var self = this;
      if (self.lyDoYeuCauGuiLai == "" || self.lyDoYeuCauGuiLai.trim() == "") {
        self.displayError("Bạn chưa nhập lý do yêu cầu gửi lại!");
      } else {
        self.showLoading();
        apiService.put(
          process.env.VUE_APP_ROOT_API + "bieumaubaocao/yeucauguilai",
          JSON.stringify({
            id: self.decodeString(self.itemClicked, "baocaodinhkyctck"),
            lyDoGuiLai: this.lyDoYeuCauGuiLai,
          }),
          // { id: self.itemClicked, thoiHanGiaHan: this.thoiGianGH },
          function (res) {
            self.lyDoYeuCauGuiLai = "";
            if (res != null) {
              self.hideLoading();
              //fetch data
              self.pagination.page = 0;
              self.pagination.rowsPerPage = 15;
              self.onRequest({
                pagination: self.pagination,
              });
              var strMessage = "Yêu cầu gửi lại báo cáo thành công.";
              self.formYeuCauGuiLai = false;
              self.displaySuccess(strMessage);
            } else {
              self.displayError(res.message);
            }
          },
          function () {
            self.displayError("Yêu cầu gửi lại báo cáo không thành công");
          }
        );
      }
    },

    async getListData(page, rowsPerPage, nextpage) {
      var self = this;
      if (page == 0) {
        page = 0;
      }
      page = page || self.pagination.page;
      rowsPerPage = rowsPerPage || self.pagination.rowsPerPage;
      self.pagination.rowsPerPage = rowsPerPage;
      var params = {
        pageNo: page,
        pageSize: rowsPerPage,
        desc: self.pagination.descending,
        namThoiHan: self.modelNoRequest.namThoiHan.value,
        // tenBaoCao: self.modelNoRequest.tenBaoCao,
        tenBaoCao:
          self.modelNoRequest.tenBaoCao.value == ""
            ? ""
            : self.modelNoRequest.tenBaoCao.label,
        tenCongTy:
          self.modelNoRequest.tenCongTy.value != ""
            ? self.modelNoRequest.tenCongTy.value
            : "",
        trangThai: self.modelNoRequest.trangThai.value,
        kyBaoCao: self.modelNoRequest.kyBaoCao.value,
        strFilter: self.modelNoRequest.strfilter,
        loaiBaoCao:
          self.modelNoRequest.loaiBaoCao.value != ""
            ? self.modelNoRequest.loaiBaoCao.value
            : "",
        nhomBaoCao:
          self.modelNoRequest.nhomBaoCao.value != ""
            ? self.modelNoRequest.nhomBaoCao.value
            : "",
      };
      self.showLoading();
      await apiService.get(
        process.env.VUE_APP_ROOT_API + "baocaodinhki/getlist",
        params,
        function (res) {
          self.hideLoading();
          self.listData = [];
          //set resource
          if (
            res != undefined &&
            res != null &&
            res.lstBDTO != undefined &&
            res.lstBDTO != null &&
            res.lstBDTO.length > 0
          ) {
            var lstBDTO = res.lstBDTO[0];
            if (lstBDTO != null && lstBDTO.lstTenCongTy.length > 0) {
              for (let a = 0; a < res.lstBDTO[0].lstTenCongTy.length; a++) {
                if (
                  lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO != null &&
                  lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO.length > 0
                ) {
                  for (
                    let b = 0;
                    b < lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO.length;
                    b++
                  ) {
                    if (
                      lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b].lstkyBaoCao !=
                        null &&
                      lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b].lstkyBaoCao
                        .length > 0
                    ) {
                      for (
                        let c = 0;
                        c <
                        lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b].lstkyBaoCao
                          .length;
                        c++
                      ) {
                        if (
                          lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b]
                            .lstkyBaoCao[c].lstchillDTO != null &&
                          lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b]
                            .lstkyBaoCao[c].lstchillDTO.length > 0
                        ) {
                          for (
                            let d = 0;
                            d <
                            lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b]
                              .lstkyBaoCao[c].lstchillDTO.length;
                            d++
                          ) {
                            if (
                              lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b]
                                .lstkyBaoCao[c].lstchillDTO != null &&
                              lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b]
                                .lstkyBaoCao[c].lstchillDTO.length > 0
                            ) {
                              lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[
                                b
                              ].lstkyBaoCao[c].lstchillDTO[
                                d
                              ].id = self.encodeString(
                                lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b]
                                  .lstkyBaoCao[c].lstchillDTO[d].id,
                                "baocaodinhkyctck"
                              );
                              lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[
                                b
                              ].lstkyBaoCao[c].lstchillDTO[
                                d
                              ].idBaoCao = self.encodeString(
                                lstBDTO.lstTenCongTy[a].lstnamThoiHanDTO[b]
                                  .lstkyBaoCao[c].lstchillDTO[d].idBaoCao,
                                "baocaodinhkyctck"
                              );
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              self.listData = lstBDTO.lstTenCongTy;
            }
          }

          if (res.totalElement == null || res.totalElement == 0) {
            self.pagination.pagesNumber = 1;
            self.isFirstPage = true;
            self.isLastPage = true;

            self.pagination.page = 1;
            self.pagination.total = 0;
          } else {
            self.pagination.page = res.pageNo;
            self.pagination.total = res.totalElement;
            var pageNumberTmp =
              self.pagination.total / self.pagination.rowsPerPage;

            var checkSoNguye = Number.isInteger(pageNumberTmp);

            if (checkSoNguye) {
              self.pagination.pagesNumber = pageNumberTmp;
            } else {
              self.pagination.pagesNumber = parseInt(pageNumberTmp, 10) + 1;
            }
            if (self.pagination.pagesNumber <= 1) {
              self.isFirstPage = true;
              self.isLastPage = true;
            } else if (self.pagination.page == self.pagination.pagesNumber) {
              self.isFirstPage = false;
              self.isLastPage = true;
            } else if (
              self.pagination.page > 1 &&
              self.pagination.page < self.pagination.pagesNumber
            ) {
              self.isFirstPage = false;
              self.isLastPage = false;
            } else {
              self.isFirstPage = true;
              self.isLastPage = false;
            }
            self.hideLoading();
          }

          if (nextpage == null) {
            self.IdStoreArr = [];
            self.igoneIndex = [];
            //.pushIndexLoad(res, self);
          }
          // else if (nextpage) {
          //self.pushIndexLoad(res, self);
          // } else {
          //self.DeleteIndex(res, self);
          // }
          self.hideLoading();
        },
        function () {
          //disable loading
          self.hideLoading();
        }
      );
    },

    onSwitchAdvance(pExpanded) {
      // this.modelNoRequest =
      this.expanded = !pExpanded;
    },

    chapNhanHuy(item) {
      var self = this;
      if (!item) {
        self.displayWarning("Bản ghi không tồn tại");
      }

      self.$q
        .dialog({
          title: "Bạn có thực sự chấp nhận hủy báo cáo này?",
          message: "<strong></strong>",
          html: true,
          ok: {
            color: "primary",
            label: "Xác nhận",
            size: "12px",
          },
          cancel: {
            color: "negative",
            label: " Hủy",
            size: "12px",
          },
        })
        .onOk(() => {
          //call ajax remove item on server
          apiService.put(
            process.env.VUE_APP_ROOT_API + "bieumaubaocao/chapnhanhuy",
            JSON.stringify({
              id: self.decodeString(item.id, "baocaodinhkyctck"),
            }),
            function () {
              //fetch data
              self.pagination.page = 0;
              self.pagination.rowsPerPage = 15;
              self.onRequest({
                pagination: self.pagination,
              });

              let strMessage = "Đã đồng ý hủy thành công";
              self.displaySuccess(strMessage);
              //
            },
            function () {
              self.displayError("Đồng ý hủy không thành công!");
            }
          );
        });
    },

    tuChoiHuy(item) {
      var self = this;
      if (!item) {
        self.displayWarning("Bản ghi không tồn tại");
      }

      self.$q
        .dialog({
          title: "Bạn có thực sự từ chối hủy báo cáo này?",
          message: "<strong></strong>",
          html: true,
          ok: {
            color: "primary",
            label: "Xác nhận",
            size: "12px",
          },
          cancel: {
            color: "negative",
            label: " Hủy",
            size: "12px",
          },
        })
        .onOk(() => {
          //call ajax remove item on server
          apiService.put(
            process.env.VUE_APP_ROOT_API + "bieumaubaocao/tuchoihuy",
            JSON.stringify({
              id: self.decodeString(item.id, "baocaodinhkyctck"),
            }),
            function () {
              //fetch data
              self.pagination.page = 0;
              self.pagination.rowsPerPage = 15;
              self.onRequest({
                pagination: self.pagination,
              });

              let strMessage = "Đã từ chối hủy thành công";
              self.displaySuccess(strMessage);
              //
            },
            function () {
              self.displayError("Từ chối hủy không thành công!");
            }
          );
        });
    },

    // yeuCauGuiLai(item) {
    //   var self = this;
    //   if (!item) {
    //     self.displayWarning("Bản ghi không tồn tại");
    //   }

    //   self.$q
    //     .dialog({
    //       title: "Bạn có thực sự muốn xóa bản ghi?",
    //       message: "<strong>" + item.tenTaiLieu + "</strong>",
    //       html: true,
    //       ok: {
    //         color: "primary",
    //         label: "Xóa",
    //         size: "12px"
    //       },
    //       cancel: {
    //         color: "negative",
    //         label: " Hủy",
    //         size: "12px"
    //       }
    //     })
    //     .onOk(() => {
    //       //call ajax remove item on server
    //       apiService.del(
    //         process.env.VUE_APP_ROOT_API + "baocaodinhki/xoa/" + item.id,
    //         null,
    //         function() {
    //           //fetch data
    //           self.pagination.page = 0;
    //           self.pagination.rowsPerPage = 10;
    //           self.onRequest({
    //             pagination: self.pagination
    //           });

    //           let strMessage = "Đã xóa thành công";
    //           self.displaySuccess(strMessage);
    //
    //         },
    //         function() {
    //           self.displayError("Xóa không thành công!");
    //         }
    //       );
    //     });
    // },
    filterByCondition() {
      var self = this;
      self.pagination.page = 0;
      //filter data by request
      self.onRequest({
        pagination: self.pagination,
        filter: self.modelNoRequest,
      });
    },

    iconName(iconName) {
      if (iconName) {
        return "remove_circle_outline";
      }

      if (!iconName) {
        return "control_point";
      }

      return "done";
    },
    toggle(index) {
      this.listData[index].active = !this.listData[index].active;
      this.toggled = !this.toggled;
    },
    toggleSub(index, indexNam) {
      this.listData[index].lstnamThoiHanDTO[indexNam].active = !this.listData[
        index
      ].lstnamThoiHanDTO[indexNam].active;
      this.toggledtoggleSub = !this.toggledtoggleSub;

      if (!this.listData[index].lstnamThoiHanDTO[indexNam].active) {
        let lst = this.listData[index].lstnamThoiHanDTO[indexNam].lstkyBaoCao;
        for (let i = 0; i < lst.length; i++) {
          lst[i].active = false;
        }
      }
    },
    toggleSub1(index, indexNam, indexKy) {
      this.listData[index].lstnamThoiHanDTO[indexNam].lstkyBaoCao[
        indexKy
      ].active = !this.listData[index].lstnamThoiHanDTO[indexNam].lstkyBaoCao[
        indexKy
      ].active;
      this.toggledtoggleSub1 = !this.toggledtoggleSub1;
    },
    toggleSub2(index, indexNam, indexKy, indexChill) {
      this.listData[index].lstnamThoiHanDTO[indexNam].lstkyBaoCao[
        indexKy
      ].lstchillDTO[indexChill].active = !this.listData[index].lstnamThoiHanDTO[
        indexNam
      ].lstkyBaoCao[indexKy].lstchillDTO[indexChill].active;
      this.toggledtoggleSub2 = !this.toggledtoggleSub2;
    },

    // Send Bao cao UBCK
    async sendBaoCaoUbck(thanhVienId) {
      var self = this;

      let parr = {
        thanhVienId: thanhVienId,
      };

      await self.$q
        .dialog({
          title: "Bạn có thực sự muốn gửi báo cáo ?",
          message: "",
          html: true,
          ok: {
            color: "primary",
            label: "Gửi",
            size: "12px",
          },
          cancel: {
            color: "negative",
            label: " Hủy",
            size: "12px",
          },
        })
        .onOk(() => {
          apiService.get(
            process.env.VUE_APP_ROOT_API + "baocaodinhky/guibaocao",
            parr,
            function (res) {
              if (res != null) {
                if (res.status === 417) {
                  self.displayError(res.data);
                } else {
                  var strMessage = "Gửi báo cáo thành công.!";
                  self.displaySuccess(strMessage);
                  self.onRequest(self);
                }
              } else {
                return apiService.displayErrorApi(self);
              }
            },
            function () {}
          );
        });
    },
  },
  computed: {
    arrayTreeObj() {
      let vm = this;
      var newObj = [];
      vm.recursive(vm.lstBDTO, newObj, 0, vm.itemId, vm.isExpanded);
      return newObj;
    },
  },

  watch: {
    selectedIDRow: function (val) {
      if (this.selectedRowID != null) {
        this.$set(this.selectedRowID, "ctckThongTinId", val);
      }
    },
  },
};
</script>
