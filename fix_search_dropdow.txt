<q-select
  :options-sanitize="true"
  ref="getTinhThanhId"
  v-model="model.getTinhThanhId"
  filter
  use-input
  dense
  outlined
  input-debounce="0"
  :options="optionTinhThanhsTemp"
  @filter="filterDropdownTinhThanh"
  @input="(newVal) => { 
  this.model.getTinhThanhId = newVal; 
  this.getQuanHuyenByTinhThanhId(newVal) }"
  lazy-rules
  :rules="[
  val => val && val.value !== '' || 'Vui lòng chọn tỉnh thành'
]"
>
  <template v-slot:no-option>
	<q-item>
	  <q-item-section class="text-grey">Không có kết quả</q-item-section>
	</q-item>
  </template>
</q-select>

optionTinhThanhs: [],
optionTinhThanhsTemp: [], //arr tạm


filterDropdownTinhThanh(val, updateLH) {
  // updateLH
  var self = this;

  if (val === "") {
	updateLH(() => {
	  self.optionTinhThanhsTemp = self.optionTinhThanhs;
	});
	return;
  }

  updateLH(() => {
	const needle = val.toLowerCase();
	self.optionTinhThanhsTemp = self.optionTinhThanhs.filter(
	  (v) => v.label.toLowerCase().indexOf(needle) > -1
	);
  });
},

dDTenCongTy: [],
dDTenCongTyTemp: [],

optionCtckThongTinsTemp: [],// arr tạm

:options="optionCtckThongTinsTemp"
@filter="filterDropdownCTCK"




@filter= "filterChiTieu"

@input="(newVal) => { 
	filterByCondition(1);  
}"


onSwitchAdvance


 var tempTrangThai = self.optiontrangThaiVPDaiDien.filter(
	(v) => v.value == res.trangThai
  );
  if (tempTrangThai != null && tempTrangThai.length > 0)
	self.TrangThai = tempTrangThai[0];
	
	
if (res.thongTinThayDoi.fileDinhKem != null && res.thongTinThayDoi.fileDinhKem != "") {
            var arr = res.thongTinThayDoi.fileDinhKem.split(",");
          }
          if (arr != null && arr != undefined && arr.length > 0) {
            for (let index = 0; index < arr.length; index++) {
              let element = arr[index];
              let itemSplit = element.split("\\");
              
              let itemName = itemSplit[itemSplit.length - 1];
              var objectFile = { path: element, nameFile: itemName };
              if (objectFile.path != "null" && objectFile.path != "") {
                self.arrFileDinhKem.push(objectFile);
              }
            }
          }
		  
		  detailClick(p) {
      this.loaded = true;
      this.checkTypeFile(p);
    },
	
	
	checkTypeFile(typefile) {
      typefile = typefile.replace("\\", "/");
      typefile = typefile.replace("\\", "/");

      if (typefile.toLowerCase().includes(".pdf")) {
        this.iframeSrc =
          httpsAuthor.httpConnect +
          "/" +
          typefile +
          "`" +
          Cookies.get("tokenSCMS") +
          "#toolbar=0";
      } else {
        this.iframeSrc =
          "https://docs.google.com/viewer?url=" +
          httpsAuthor.httpConnect +
          "/" +
          typefile +
          "`" +
          Cookies.get("tokenSCMS") +
          "&embedded=true";
      }
      if (
        document.getElementById("previewIF") != null &&
        document.getElementById("previewIF") != undefined
      ) {
        document.getElementById("previewIF").src = document.getElementById(
          "previewIF"
        ).src;
      }
    },
